<!DOCTYPE html>
<html>
  <head>
    <% include ../partials/head %>

    <script src="https://docs.handsontable.com/0.32.0/bower_components/handsontable/dist/handsontable.full.js"></script>
    <link href="https://docs.handsontable.com/0.32.0/bower_components/handsontable/dist/handsontable.full.min.css" rel="stylesheet" type="text/css">
  </head>
  <body>
    <% include ../partials/navbar %>
    <div class="container home home-about">

     <h2>Understanding binding as reference</h2>
     <div class="hot handsontable" id="example1"></div>
<script type='text/javascript'>
     document.addEventListener("DOMContentLoaded", function() {

  var
    data1 = [
      ['', 'Kia', 'Nissan', 'Toyota', 'Honda', 'Mazda', 'Ford'],
      ['2012', 10, 11, 12, 13, 15, 16],
      ['2013', 10, 11, 12, 13, 15, 16],
      ['2014', 10, 11, 12, 13, 15, 16],
      ['2015', 10, 11, 12, 13, 15, 16],
      ['2016', 10, 11, 12, 13, 15, 16]
    ],
    container1 = document.getElementById('example1'),
    settings1 = {
      data: data1
    },
    hot1;

  hot1 = new Handsontable(container1, settings1);
  data1[0][1] = 'Ford'; // change "Kia" to "Ford" programmatically
  hot1.render();

  function bindDumpButton() {
      if (typeof Handsontable === "undefined") {
        return;
      }

      Handsontable.dom.addEvent(document.body, 'click', function (e) {

        var element = e.target || e.srcElement;

        if (element.nodeName == "BUTTON" && element.name == 'dump') {
          var name = element.getAttribute('data-dump');
          var instance = element.getAttribute('data-instance');
          var hot = window[instance];
          console.log('data of ' + name, hot.getData());
        }
      });
    }
  bindDumpButton();
 });
 </script>

 <h2>But I want to change my data without rendering changes!</h2>
  <div class="hot handsontable" id="example2"></div>
  <script type='text/javascript'>
  document.addEventListener("DOMContentLoaded", function() {

  var
    data2 = [
      ['', 'Kia', 'Nissan', 'Toyota', 'Honda', 'Mazda', 'Ford'],
      ['2012', 10, 11, 12, 13, 15, 16],
      ['2013', 10, 11, 12, 13, 15, 16],
      ['2014', 10, 11, 12, 13, 15, 16],
      ['2015', 10, 11, 12, 13, 15, 16],
      ['2016', 10, 11, 12, 13, 15, 16]
    ],
    container2 = document.getElementById('example2'),
    hot2;

  hot2 = new Handsontable(container2, {
    data: JSON.parse(JSON.stringify(data2))
  });

  function bindDumpButton() {
      if (typeof Handsontable === "undefined") {
        return;
      }

      Handsontable.dom.addEvent(document.body, 'click', function (e) {

        var element = e.target || e.srcElement;

        if (element.nodeName == "BUTTON" && element.name == 'dump') {
          var name = element.getAttribute('data-dump');
          var instance = element.getAttribute('data-instance');
          var hot = window[instance];
          console.log('data of ' + name, hot.getData());
        }
      });
    }
  bindDumpButton();

});
 </script>


 <p>In a similar way, you may find it useful to clone data before saving it.</p>

 <p>That would be useful to make programmatic changes that would be saved to server but kept not invisible to
   the user.</p>
<div class="hot handsontable" id="example3"></div>

<script type='text/javascript'>
document.addEventListener("DOMContentLoaded", function() {

  var
    data3 = [
      ['', 'Kia', 'Nissan', 'Toyota', 'Honda', 'Mazda', 'Ford'],
      ['2012', 10, 11, 12, 13, 15, 16],
      ['2013', 10, 11, 12, 13, 15, 16],
      ['2014', 10, 11, 12, 13, 15, 16],
      ['2015', 10, 11, 12, 13, 15, 16],
      ['2016', 10, 11, 12, 13, 15, 16]
    ],
    container3 = document.getElementById('example3'),
    hot3;

  hot3 = new Handsontable(container3, {
    data: data3,
    afterChange: function () {
      var tmpData = JSON.parse(JSON.stringify(data3));
      // now tmpData has a copy of data3 that can be manipulated
      // without breaking the Handsontable data source object
    }
  });

  function bindDumpButton() {
      if (typeof Handsontable === "undefined") {
        return;
      }

      Handsontable.dom.addEvent(document.body, 'click', function (e) {

        var element = e.target || e.srcElement;

        if (element.nodeName == "BUTTON" && element.name == 'dump') {
          var name = element.getAttribute('data-dump');
          var instance = element.getAttribute('data-instance');
          var hot = window[instance];
          console.log('data of ' + name, hot.getData());
        }
      });
    }
  bindDumpButton();

});
 </script>
    </div>
  </body>
</html>
